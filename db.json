{"files":[{"id":"c9548bab-eb33-4826-8c7b-20df59012c15","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"Europe/Kaliningrad\",\n  \"dependencies\": {},\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\",\n  \"webapp\": {\n    \"executeAs\": \"USER_DEPLOYING\",\n    \"access\": \"MYSELF\"\n  }\n}"},{"id":"bb541807-85dd-4718-91e3-19190d71a5bc","name":"Код","type":"server_js","source":"//Получаем доступ к таблице по ссылке с уникальным идентификатором\nvar tasklist \u003d SpreadsheetApp.openByUrl(\"https://docs.google.com/spreadsheets/d/1fbfPhUc3brlOMU_aaVwUsXnRItLlJO4emw6id4olG-Y/edit#gid\u003d0\");\n//Получаем доступ к странице по ее имени\nvar tasks \u003d tasklist.getSheetByName(\"tasks\");\n\n//Стандартная функция Google Apps Script для прослушивания входящих запросов, отправленных методом POST\nfunction doPost (e) {\n    var operation \u003d e.parameter.action;//получаем параметр \"action\"\n\n    switch (operation) {\n\n        case \"addTask\": return addTask (e);\n        case \"deleteTask\": return deleteTask (e);\n        case \"updateTask\": return updateTask (e);\n\n    }\n\n}\n\n//Стандартная функция Google Apps Script для прослушивания входящих запросов, отправленных методом GET\nfunction doGet (e) {\n    var operation \u003d e.parameter.action;//получаем параметр \"action\"\n\n    switch (operation) {\n\n        case \"getTasks\": return getTasks ();\n\n    }\n\n}\n\n//Функция, отвечающая за получение строк и отправку данных клиенту\nfunction getTasks () {\n    var lastrow \u003d tasks.getLastRow();//получаем номер последней строки в таблице\n    var data \u003d tasks.getRange(\"A1:C\" + lastrow).getValues();//получаем массив указанных колонок\n    return ContentService.createTextOutput(JSON.stringify(data)).setMimeType(ContentService.MimeType.JSON);//возвращает в ответ записанные данные в JSON формате\n}\n\n\n//Функция, отвечающая за добавление новых задач\nfunction addTask (e) {\n    var dateTime \u003d Utilities.formatDate(new Date(), \"GMT+4\", \"dd.MM.yyy HH:mm:ss\");//определяем дату в нужном формате и часовом поясе\n    var task \u003d e.parameter.task;//получаем название задачи в переданном параметре\n    var status \u003d 0; //ноль будет обозначать статус \"ожидает\", так как при создании задачи, она не может быть уже выполненной\n    if (String(task).trim() \u003d\u003d \"\") {\n        return ContentService.createTextOutput(\u0027Описание задачи не может быть пустым! Попробуй еще раз\u0027);\n    }\n\n    tasks.appendRow([dateTime,task,status]); //обращаемся к нашей странице “tasks” определяем крайнюю свободную строку и вставляем полученные значения. Аналогично INSERT.\n    return ContentService.createTextOutput(\u0027Задача успешно добавлена!\u0027);//возвращает в ответ текстовое сообщение об успехе\n}\n\n\n//Функция, отвечающая за удаление задач\nfunction deleteTask (e) {\n    var task \u003d e.parameter.task;//получаем название задачи в переданном параметре\n    var lastrow \u003d tasks.getLastRow();//получаем номер последней строки в таблице\n    var array \u003d tasks.getRange(\"B1:B\" + lastrow).getValues();//получаем массив указанных ячеек колонки, в которой будем искать соответствие\n\n    for (var i \u003d 0; i \u003c\u003d array.length; i++) {\n        if (array[i] \u003d\u003d task) {//если элемент соответствует искомому в массиве, то...\n            tasks.deleteRow(i+1);//обращаемся к нашей странице “tasks” и удаляем строку, в которой было найдено совпадение. Прибавляем единичку, т.к. это был массив и у него нумерация идет с нуля...\n            break;//завершаем цикл, т.к. мы нашли что искали и сделали, что хотели\n        }\n    }\n\n    return ContentService.createTextOutput(\"Задача успешно удалена!\");\n}\n\n//Функция, отвечающая за обновление задач\nfunction updateTask (e) {\n    var task \u003d e.parameter.task;//получаем название задачи в переданном параметре\n    var newValue \u003d e.parameter.newValue;//получаем новое значение в переданном параметре\n    var where \u003d e.parameter.where;//получаем название колонки, в которой будем заменять старое значение новым\n    var lastrow \u003d tasks.getLastRow();//получаем номер последней строки в таблице\n\n    switch(where){\n        case \"task\":\n            var col \u003d \"B\";\n            break;\n        case \"status\":\n            var col \u003d \"C\";\n            break;\n    }\n\n    var array \u003d tasks.getRange(\"B1:B\" + lastrow).getValues();//получаем массив указанных ячеек колонки, в которой будем искать соответствие\n\n    for (var i \u003d 0; i \u003c\u003d array.length; i++) {//запускаем цикл по массиву\n        if (array[i] \u003d\u003d task) {//если элемент соответствует искомому, то...\n            tasks.getRange(col + (i+1)).setValue(newValue);//обращаемся к нашей странице “tasks” и обновляем нужную колонку, в которой было найдено совпадение\n            break;//завершаем цикл, т.к. мы нашли что искали и сделали, что хотели\n        }\n    }\n\n    return ContentService.createTextOutput(\"Задача успешно обновлена!\");\n}"}]}